#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Auto Click Fix - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
"""

import re

def fix_auto_click():
    print("üîß Fixing auto-click functionality...")
    
    # ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå
    with open("main_prgram_tax.py", "r", encoding="utf-8") as f:
        content = f.read()
    
    # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å"
    button_pattern = r'ft\.ElevatedButton\("‚¨áÔ∏è ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å", on_click=lambda e: auto_fill_from_selected_dashboard\(\)'
    
    if button_pattern in content:
        print("‚úÖ Found '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å' button")
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á UI
        auto_click_code = '''
        # AUTO-CLICK: ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å" ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
        def trigger_auto_fill():
            import time
            time.sleep(1.0)  # ‡∏£‡∏≠‡πÉ‡∏´‡πâ UI ‡∏û‡∏£‡πâ‡∏≠‡∏°
            try:
                print("üîÑ Auto-triggering: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å...")
                auto_fill_from_selected_dashboard()
                print("‚úÖ Auto-fill triggered successfully!")
            except Exception as e:
                print(f"‚ùå Auto-fill error: {e}")
        
        # ‡πÄ‡∏£‡∏¥‡πà‡∏° auto-trigger
        import threading
        threading.Thread(target=trigger_auto_fill, daemon=True).start()
        '''
        
        # ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏ó‡∏£‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å return crystal_tab)
        return_pattern = r'return crystal_tab'
        
        if return_pattern in content:
            # ‡πÅ‡∏ó‡∏£‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏Å‡πà‡∏≠‡∏ô return crystal_tab
            content = content.replace(
                'return crystal_tab',
                auto_click_code + '\n        return crystal_tab'
            )
            print("‚úÖ Added auto-click code")
            
            # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
            with open("main_prgram_tax.py", "w", encoding="utf-8") as f:
                f.write(content)
            
            print("‚úÖ File updated successfully!")
            return True
        else:
            print("‚ùå Could not find 'return crystal_tab'")
            return False
    else:
        print("‚ùå Could not find '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å' button")
        return False

if __name__ == "__main__":
    print("üöÄ AUTO-CLICK FIX")
    print("=" * 30)
    
    success = fix_auto_click()
    
    if success:
        print("\n‚úÖ FIX COMPLETED!")
        print("üîß Added auto-click functionality")
        print("üöÄ Now test: python main_prgram_tax.py")
        print("\nSteps:")
        print("1. Go to Dashboard tab")
        print("2. Select any row (checkbox)")  
        print("3. Click 'üöÄ ‡∏ô‡∏≥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô Crystal Report'")
        print("4. Wait 1 second ‚Üí Data will auto-fill!")
    else:
        print("\n‚ùå FIX FAILED!")
        print("Could not apply auto-click fix")


